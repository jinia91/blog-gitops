apiVersion: apps/v1
kind: Deployment
metadata:
  name: ksqldb-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ksqldb
  template:
    metadata:
      labels:
        app: ksqldb
    spec:
      nodeName: mk4
      containers:
        - name: ksqldb-server
          image: confluentinc/cp-ksqldb-server:7.8.1
          env:
            - name: KSQL_BOOTSTRAP_SERVERS
              value: "kafka-service:9092"
            - name: KSQL_KSQL_PRODUCER_INTERCEPTOR_CLASSES
              value: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
            - name: KSQL_KSQL_CONSUMER_INTERCEPTOR_CLASSES
              value: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
            - name: KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE
              value: "true"
            - name: KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE
              value: "true"
          ports:
            - containerPort: 8088

      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: NotIn
                    values:
                      - mk3
---
apiVersion: v1
kind: Service
metadata:
  name: ksqldb-server
  namespace: data
spec:
  ports:
    - port: 8088
      targetPort: 8088
  selector:
    app: ksqldb
  type: ClusterIP