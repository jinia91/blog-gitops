replicaCount: 2

image:
  repository: jinia91/blog-backend
  pullPolicy: IfNotPresent
  tag: cea1f0f5be917c760e8a1029b5a6f79ca70cb0cb

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []

fullnameOverride: blog-backend
nameOverride: blog-backend

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 7777
  annotations:
    traefik.ingress.kubernetes.io/service.sticky.cookie: "true"

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    memory: 2Gi
  requests:
    memory: 2Gi
    cpu: 1000m

livenessProbe:
  httpGet:
    path: /actuator/health/liveness
    port: 7777
  initialDelaySeconds: 60
  periodSeconds: 10

readinessProbe:
  httpGet:
    path: /actuator/health/readiness
    port: 7777
  initialDelaySeconds: 60
  periodSeconds: 5

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 4
  targetCPUUtilizationPercentage: 150

volumes:
  - name: config-volume
    configMap:
      name: jiniaslog-config

volumeMounts:
  - name: config-volume
    mountPath: /config/

nodeSelector: {}

tolerations: []

affinity: {}

env:
  - name: JAVA_TOOL_OPTIONS
    value: "-Xmx1500m -Xms512m"
  - name: SPRING_CONFIG_LOCATION
    value: "optional:file:/config/application.yml"